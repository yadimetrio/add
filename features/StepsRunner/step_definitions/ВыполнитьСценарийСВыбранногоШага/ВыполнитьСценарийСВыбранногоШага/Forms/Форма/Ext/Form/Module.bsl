//начало текста модуля

///////////////////////////////////////////////////
//Служебная часть
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;

&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;

	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстановилСпециальнуюСлужебнуюЭкспортнуюПеременнуюСлужебнаяПеременнаяУОткрытогоVanessaADDРавной(Парам01)","ЯУстановилСпециальнуюСлужебнуюЭкспортнуюПеременнуюСлужебнаяПеременнаяУОткрытогоVanessaADDРавной","И я установил специальную служебную экспортную переменную СлужебнаяПеременная у открытого VanessaADD равной 0","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТестируемомЭкземпляреЯУстановилФлагВ(Парам01,Парам02)","ВТестируемомЭкземпляреЯУстановилФлагВ","И в тестируемом экземпляре я установил флаг ""ВыполнятьШагиАссинхронно"" в ""Ложь""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТестируемомЭкземпляреЯУстановилТекущуюСтрокуДерева(Парам01)","ВТестируемомЭкземпляреЯУстановилТекущуюСтрокуДерева","И в тестируемом экземпляре я установил текущую строку дерева 15","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТестируемомЭкземпляреВПеременнойКонтекстСохраняемыйЗначениеСлужебнойПеременнойРавно(Парам01)","ВТестируемомЭкземпляреВПеременнойКонтекстСохраняемыйЗначениеСлужебнойПеременнойРавно","И в тестируемом экземпляре в переменной КонтекстСохраняемый значение служебной переменной равно 4","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВТестируемомЭкземпляреЯВыполнилКомандуУстановитьБрейкпоинт()","ВТестируемомЭкземпляреЯВыполнилКомандуУстановитьБрейкпоинт","И в тестируемом экземпляре я выполнил команду установить брейкпоинт","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеОткрытогоVanessaADDЯУстановилФлагОбъекта(Парам01)","ВФормеОткрытогоVanessaADDЯУстановилФлагОбъекта","И в форме открытого VanessaADD я установил флаг объекта ""СохранятьКонтекстыПередВыполнениемШагов""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеОткрытогоVanessaADDЯУстановилВторомуШагуПервогоСценарияФлаг(Парам01)","ВФормеОткрытогоVanessaADDЯУстановилВторомуШагуПервогоСценарияФлаг","И в форме открытого VanessaADD я установил второму шагу первого сценария флаг ""ВыполнятьСценарийСЭтогоШага""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗначениеСлужебнойЭкспортнойПеременнойУОткрытогоVanessaADDРавно(Парам01)","ЗначениеСлужебнойЭкспортнойПеременнойУОткрытогоVanessaADDРавно","И значение служебной экспортной переменной у открытого VanessaADD равно 5","","");

	Возврат ВсеТесты;
КонецФункции

&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	Сообщить("ВыполнитьСценарийСВыбранногоШага.ПередНачаломСценария");
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	//безусловное закрытие формы если она осталась
	Попытка
	    ОткрытаяФормаVanessaADD = Контекст.ОткрытаяФормаVanessaADD;
		ОткрытаяФормаVanessaADD.Закрыть();
	Исключение

	КонецПопытки;
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И в форме открытого VanessaADD я установил флаг объекта "СохранятьКонтекстыПередВыполнениемШагов"
//@ВФормеОткрытогоVanessaADDЯУстановилФлагОбъекта(Парам01)
Процедура ВФормеОткрытогоVanessaADDЯУстановилФлагОбъекта(ИмяФлага) Экспорт
	Контекст.ОткрытаяФормаVanessaADD.Объект.СохранятьКонтекстыПередВыполнениемШагов = Истина;
КонецПроцедуры


&НаКлиенте
//И в форме открытого VanessaADD я установил второму шагу первого сценария флаг "ВыполнятьСценарийСЭтогоШага"
//@ВФормеОткрытогоVanessaADDЯУстановилВторомуШагуПервогоСценарияФлаг(Парам01)
Процедура ВФормеОткрытогоVanessaADDЯУстановилВторомуШагуПервогоСценарияФлаг(ИмяПараметра) Экспорт
	СтрокиДерева = Контекст.ОткрытаяФормаVanessaADD.Объект.ДеревоТестов.ПолучитьЭлементы();
	СтрокиДерева = СтрокиДерева[0].ПолучитьЭлементы();//фича
	СтрокиДерева = СтрокиДерева[0].ПолучитьЭлементы();//сценарий
	СтрокиДерева = СтрокиДерева[0].ПолучитьЭлементы();//шаги

	Контекст.ОткрытаяФормаVanessaADD.Элементы.ДеревоТестов.ТекущаяСтрока = СтрокиДерева[1].ПолучитьИдентификатор();
	Контекст.ОткрытаяФормаVanessaADD.ПроцУстановитьПометкуВыполнятьСценарийСЭтогоШага();

КонецПроцедуры

&НаКлиенте
//И в тестируемом экземпляре в переменной КонтекстСохраняемый значение служебной переменной равно 5
//@ВТестируемомЭкземпляреВПеременнойКонтекстСохраняемыйЗначениеСлужебнойПеременнойРавно(Парам01)
Процедура ВТестируемомЭкземпляреВПеременнойКонтекстСохраняемыйЗначениеСлужебнойПеременнойРавно(Зн) Экспорт
	Ванесса.ПроверитьРавенство(Контекст.ОткрытаяФормаVanessaADD.ПолучитьКонтекстСохраняемый().СлужебныйПараметр,Зн,"Неверное значение служебной переменной в КонтекстСохраняемый.");
КонецПроцедуры


&НаКлиенте
//И я установил специальную служебную экспортную переменную СлужебнаяПеременная у открытого VanessaADD равной 0
//@ЯУстановилСпециальнуюСлужебнуюЭкспортнуюПеременнуюСлужебнаяПеременнаяУОткрытогоVanessaADDРавной(Парам01)
Процедура ЯУстановилСпециальнуюСлужебнуюЭкспортнуюПеременнуюСлужебнаяПеременнаяУОткрытогоVanessaADDРавной(Зн) Экспорт
	Контекст.ОткрытаяФормаVanessaADD.СлужебнаяПеременная = 0;
КонецПроцедуры

&НаКлиенте
//И значение служебной экспортной переменной у открытого VanessaADD равно 5
//@ЗначениеСлужебнойЭкспортнойПеременнойУОткрытогоVanessaADDРавно(Парам01)
Процедура ЗначениеСлужебнойЭкспортнойПеременнойУОткрытогоVanessaADDРавно(Зн) Экспорт
	Ванесса.ПроверитьРавенство(Контекст.ОткрытаяФормаVanessaADD.СлужебнаяПеременная,Зн,"Неверное значение служебной экспортной переменной.");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьМассивИДРекурсивно(МассивИД,СтрокиДерева)
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		МассивИД.Добавить(СтрокаДерева);
		ПолучитьМассивИДРекурсивно(МассивИД,СтрокаДерева.ПолучитьЭлементы())
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//И в тестируемом экземпляре я установил текущую строку дерева 4
//@ВТестируемомЭкземпляреЯУстановилТекущуюСтрокуДерева(Парам01)
Процедура ВТестируемомЭкземпляреЯУстановилТекущуюСтрокуДерева(НомерСтроки) Экспорт
	МассивИД = Новый Массив;
	ПолучитьМассивИДРекурсивно(МассивИД,Контекст.ОткрытаяФормаVanessaADD.Объект.ДеревоТестов.ПолучитьЭлементы());

	Контекст.ОткрытаяФормаVanessaADD.Элементы.ДеревоТестов.ТекущаяСтрока = МассивИД[НомерСтроки-1].ПолучитьИдентификатор();
КонецПроцедуры

&НаКлиенте
//И в тестируемом экземпляре я выполнил команду установить брейкпоинт
//@ВТестируемомЭкземпляреЯВыполнилКомандуУстановитьБрейкпоинт()
Процедура ВТестируемомЭкземпляреЯВыполнилКомандуУстановитьБрейкпоинт() Экспорт
	Контекст.ОткрытаяФормаVanessaADD.ОбработатьУстановкуСнятиеБрейкпоинта();
КонецПроцедуры

&НаКлиенте
//И в тестируемом экземпляре я установил флаг "ВыполнятьШагиАссинхронно" в "Ложь"
//@ВТестируемомЭкземпляреЯУстановилФлагВ(Парам01,Парам02)
Процедура ВТестируемомЭкземпляреЯУстановилФлагВ(ИмяПараметра,ЗначениеПараметра) Экспорт
	ОткрытаяФормаVanessaADD = Контекст.ОткрытаяФормаVanessaADD;
	Выполнить("ОткрытаяФормаVanessaADD.Объект." + ИмяПараметра + " = " + ЗначениеПараметра);
КонецПроцедуры
