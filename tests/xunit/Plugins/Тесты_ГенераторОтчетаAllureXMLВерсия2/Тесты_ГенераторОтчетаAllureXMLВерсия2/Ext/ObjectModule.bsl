Перем КонтекстЯдра;
Перем Ожидаем;

Перем ФайлОтчета;
Перем КаталогОтчета;
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Функция ПолучитьСписокТестов() Экспорт
	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("ТестДолжен_СоздатьОтчет");
	ВсеТесты.Добавить("ТестДолжен_Экспортировать_ОтчетОТестированииПоПутиФайла");
	ВсеТесты.Добавить("ТестДолжен_Экспортировать_ОтчетОТестированииПоПутиПапки");
	Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ФайлОтчета <> Неопределено Тогда
		УдалитьФайлы(ФайлОтчета.ПолноеИмя);
	КонецЕсли;
	
	Если КаталогОтчета <> Неопределено Тогда
		
		УдалитьФайлы(КаталогОтчета.ПолноеИмя);
		
	КонецЕсли; 
КонецПроцедуры

Процедура ТестДолжен_СоздатьОтчет() Экспорт
	
	РезультатТестирования = ПодготовитьРезультатТестирования();
	
	ГенераторОтчета = КонтекстЯдра.Плагин("ГенераторОтчетаAllureXMLВерсия2");
	Отчет = ГенераторОтчета.СоздатьОтчет(КонтекстЯдра, РезультатТестирования);
	
	Ожидаем.Что(Отчет).ИмеетТип("Массив");
	Ожидаем.Что(Отчет).Заполнено();
	
КонецПроцедуры

Функция ПодготовитьРезультатТестирования()
	ПостроительДереваТестов = КонтекстЯдра.Плагин("ПостроительДереваТестов");

	УспешныйЭлемент = ПостроительДереваТестов.СоздатьЭлемент(ЭтотОбъект.ИспользуемоеИмяФайла, "УспешныйМетод");
	ЭлементПадающийПоУтверждению = ПостроительДереваТестов.СоздатьЭлемент(ЭтотОбъект.ИспользуемоеИмяФайла, "МетодПадающийПоУтверждению");
	ЭлементПадающийПоНеизвестнойОшибке = ПостроительДереваТестов.СоздатьЭлемент(ЭтотОбъект.ИспользуемоеИмяФайла, "МетодПадающийПоНеизвестнойОшибке");
	ОтсутствующийЭлемент = ПостроительДереваТестов.СоздатьЭлемент(ЭтотОбъект.ИспользуемоеИмяФайла, "ОтсутствующийМетод", "Отсутствующий метод");

	КонтейнерГруппа = ПостроительДереваТестов.СоздатьКонтейнер("Контейнер", ПостроительДереваТестов.ИконкиУзловДереваТестов.Группа);
	Контейнер = ПостроительДереваТестов.СоздатьКонтейнер("Контейнер", ПостроительДереваТестов.ИконкиУзловДереваТестов.Обработка);

	Контейнер.Строки.Добавить(УспешныйЭлемент);
	Контейнер.Строки.Добавить(ЭлементПадающийПоУтверждению);
	Контейнер.Строки.Добавить(ЭлементПадающийПоНеизвестнойОшибке);
	Контейнер.Строки.Добавить(ОтсутствующийЭлемент);

	КонтейнерГруппа.Строки.Добавить(Контейнер);

	РезультатТестирования = КонтекстЯдра.ВыполнитьТесты(ЗагрузчикЗаглушка(), КонтейнерГруппа);
		
	Возврат РезультатТестирования;
КонецФункции

Процедура ТестДолжен_Экспортировать_ОтчетОТестированииПоПутиФайла() Экспорт
	
	РезультатТестирования = ПодготовитьРезультатТестирования();
	
	ГенераторОтчета = КонтекстЯдра.Плагин("ГенераторОтчетаAllureXMLВерсия2");
	Отчет = ГенераторОтчета.СоздатьОтчет(КонтекстЯдра, РезультатТестирования);
	
	КаталогОтчета = ПолучитьИмяВременногоФайла("") + ПолучитьРазделительПути();
	СоздатьКаталог(КаталогОтчета);
	
	ИмяФайла = КаталогОтчета + "allure.json";
	ФайлОтчета = Новый Файл(ИмяФайла);
	ГенераторОтчета.Экспортировать(Отчет[0], ФайлОтчета.ПолноеИмя);
	Ожидаем.Что(ФайлОтчета.Существует()).ЭтоЛожь();
	
	ФайлыОтчета = НайтиФайлы(КаталогОтчета, "*.json");
	Ожидаем.Что(ФайлыОтчета).Заполнено();
	КаталогОтчета = Новый Файл(КаталогОтчета); // почистим после в конце теста
	
КонецПроцедуры

Процедура ТестДолжен_Экспортировать_ОтчетОТестированииПоПутиПапки() Экспорт
	
	РезультатТестирования = ПодготовитьРезультатТестирования();
	
	ГенераторОтчета = КонтекстЯдра.Плагин("ГенераторОтчетаAllureXMLВерсия2");
	Отчет = ГенераторОтчета.СоздатьОтчет(КонтекстЯдра, РезультатТестирования);
	
	КаталогОтчета = ПолучитьИмяВременногоФайла("") + ПолучитьРазделительПути();
	СоздатьКаталог(КаталогОтчета);
	
	ГенераторОтчета.Экспортировать(Отчет[0], КаталогОтчета);
	КаталогОтчета = Новый Файл(КаталогОтчета);
	Ожидаем.Что(КаталогОтчета.Существует()).ЭтоИстина();
	
	ФайлыОтчета = НайтиФайлы(КаталогОтчета.ПолноеИмя, "*.json");
	Ожидаем.Что(ФайлыОтчета).Заполнено();
	
КонецПроцедуры

// Методы нужные для тестов
Функция ЗагрузчикЗаглушка()
	Возврат ЭтотОбъект;
КонецФункции

Функция ПолучитьКонтекстПоПути(КонтекстЯдра, Путь) Экспорт
	Возврат ЭтотОбъект;
КонецФункции

Процедура УспешныйМетод() Экспорт
КонецПроцедуры

Процедура МетодПадающийПоУтверждению() Экспорт
	КонтекстЯдра.ВызватьОшибкуПроверки("БАБАХ!!!");
КонецПроцедуры

Процедура МетодПадающийПоНеизвестнойОшибке() Экспорт
	ВызватьИсключение "Ошибка!!!";
КонецПроцедуры
