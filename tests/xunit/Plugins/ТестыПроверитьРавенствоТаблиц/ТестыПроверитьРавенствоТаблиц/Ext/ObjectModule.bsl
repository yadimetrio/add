//{ основная процедура для юнит-тестирования xUnitFor1C
Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ТестДолжен_ПроверитьРавенствоТаблиц");
	НаборТестов.Добавить("ТестДолжен_ПроверитьНеРавенствоТаблиц");
	НаборТестов.Добавить("Тест_ДолженПроверитьНеРавенствоТабличныхДокументов");
	НаборТестов.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументов");
	НаборТестов.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками");
	НаборТестов.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками");
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьРавенствоТаблиц_НечеткоеСравнение");
	НаборТестов.Добавить("ТестДолжен_ПроверитьНеРавенствоТаблиц_НечеткоеСравнение");
	
КонецПроцедуры

//}

//{ блок юнит-тестов - сами тесты

Процедура ТестДолжен_ПроверитьРавенствоТаблиц() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТаблиц(Таб1, Таб2, 
		"Таблицы 1 и 2 должны совпадать, а они различны!");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеРавенствоТаблиц() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	Строка = Таб2[0];
	Строка.Колонка1 = 21;
	Строка.Колонка2 = "строка21";

	Строка = Таб2[1];
	Строка.Колонка1 = 22;
	Строка.Колонка2 = "строка22";
	
	БылоИсключение = Ложь;
	Попытка
		УтвержденияПроверкаТаблиц.ПроверитьРавенствоТаблиц(Таб1, Таб2, 
			"Таблицы 1 и 2 не должны совпадать, а они одинаковы!");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	Утверждения.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
	СтрокаОшибки =
		"Таблицы должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ТаблицыСовпадают>, а получили <НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [Колонка1:1]. Ожидали <11>, а получили <21>
		|Значение [Колонка2:1]. Ожидали <строка11>, а получили <строка21>
		|Значение [Колонка1:2]. Ожидали <12>, а получили <22>
		|Значение [Колонка2:2]. Ожидали <строка12>, а получили <строка22>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!";
		
	Утверждения.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
КонецПроцедуры

Функция Создать2ТаблицыСДанными()
	Таб1 = Новый ТаблицаЗначений;
	Таб1.Колонки.Добавить("Колонка1",, "Колонка1");
	Таб1.Колонки.Добавить("Колонка2",, "Колонка2");
	Строка = Таб1.Добавить();
	Строка.Колонка1 = 11;
	Строка.Колонка2 = "строка11";

	Строка = Таб1.Добавить();
	Строка.Колонка1 = 12;
	Строка.Колонка2 = "строка12";
	
	Таб2 = Новый ТаблицаЗначений;
	Таб2.Колонки.Добавить("Колонка1",, "Колонка1");
	Таб2.Колонки.Добавить("Колонка2",, "Колонка2");
	Строка = Таб2.Добавить();
	Строка.Колонка1 = 11;
	Строка.Колонка2 = "строка11";

	Строка = Таб2.Добавить();
	Строка.Колонка1 = 12;
	Строка.Колонка2 = "строка12";
	
	Рез = Новый Структура("Таблица1, Таблица2", Таб1, Таб2);		
	Возврат Рез;
	
КонецФункции

Процедура Тест_ДолженПроверитьНеРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	БылоИсключение = Ложь;
	Попытка
		УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 не должны совпадать, а они одинаковы!");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	Утверждения.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
	СтрокаОшибки =
		"Таблицы должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ТаблицыСовпадают>, а получили <НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [К6:6]. Ожидали <Обычное приложение>, а получили <Управляемое приложение>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!";
	
	Утверждения.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
КонецПроцедуры

Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	Макет2 = Новый ТабличныйДокумент;
	Макет2.Вывести(ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ"));
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 должны совпадать, а они различны!");
КонецПроцедуры

Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками() Экспорт
	
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_СоСкрытойКолонкой");
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, Истина, "Таблицы 1 и 2 должны совпадать, а они различны!");
	
	Макет3 = Новый ТабличныйДокумент;
	Макет3.Вывести(Макет1);
	Макет3.Область(0, 1, 1, 1).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3, "Таблицы 1 и 3 должны совпадать, а они различны!");
	
	Макет4 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	Макет4.Область(0, 6, 1, 6).Видимость = Ложь;
	Макет5 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет5.Область(0, 6, 1, 6).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет4, Макет5, Истина, "Таблицы 4 и 5 должны совпадать, а они различны!");
	
КонецПроцедуры

Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками() Экспорт
	
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	Макет1.Область(6,, 6).Видимость = Ложь;
	Макет2.Область(6,, 6).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2,, Истина, "Таблицы 1 и 2 должны совпадать, а они различны!");
	
	Макет3 = Новый ТабличныйДокумент;
	Макет3.Вывести(Макет1);
	Макет3.ВставитьОбласть(Макет2.Область(2,, 2), Макет3.Область(1,, 1), ТипСмещенияТабличногоДокумента.ПоВертикали);
	Макет3.Область(1,, 1).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3,, Истина, "Таблицы 1 и 3 должны совпадать, а они различны!");
	
	Макет4 = Новый ТабличныйДокумент;
	Макет4.Вывести(Макет1);
	Макет4.Область(1,, 1).Видимость = Ложь;
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет4, "Таблицы 1 и 4 должны совпадать, а они различны!");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьРавенствоТаблиц_НечеткоеСравнение() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	НоваяСтрока = Таб1.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Таб1[0]);
	
	НоваяСтрока = Таб2.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Таб2[0]);
	
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТаблиц(Таб1, Таб2, 
		"Таблицы 1 и 2 должны совпадать, а они различны!", Новый Структура("НечеткоеСравнение"));
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеРавенствоТаблиц_НечеткоеСравнение() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	НоваяСтрока = Таб1.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Таб1[0]);
	
	НоваяСтрока = Таб2.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Таб1[0]);
	
	Строка = Таб2[0];
	Строка.Колонка1 = 21;
	Строка.Колонка2 = "строка21";

	Строка = Таб2[1];
	Строка.Колонка1 = 22;
	Строка.Колонка2 = "строка22";
	
	БылоИсключение = Ложь;
	Попытка
		УтвержденияПроверкаТаблиц.ПроверитьРавенствоТаблиц(Таб1, Таб2, 
			"Таблицы 1 и 2 не должны совпадать, а они одинаковы!",Новый Структура("НечеткоеСравнение"));
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	Утверждения.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	СтрокаОшибки =
		"Различия в таблицах:
		|Ожидали статус <ТаблицыСовпадают>, а получили <НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [:0]. Ожидали <Количество строк = 2>, а получили <Количество строк = 1 для строки:
		|	Колонка2 = строка11
		|>
		|Значение [:0]. Ожидали <Количество строк = 1>, а получили <Количество строк = 0 для строки:
		|	Колонка2 = строка12
		|>
		|Значение [:1]. Ожидали <Есть в таблице эталоне>, а получили <Нет в таблице эталоне для строки: 
		|	Колонка2 = строка21
		|>
		|Значение [:2]. Ожидали <Есть в таблице эталоне>, а получили <Нет в таблице эталоне для строки: 
		|	Колонка2 = строка22";
		
	Ошибка = СтрЗаменить(Ошибка, Символы.Таб, "");	
	СтрокаОшибки = СтрЗаменить(СтрокаОшибки, Символы.Таб, "");
	Утверждения.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
КонецПроцедуры

//} 
